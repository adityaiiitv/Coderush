// AUTHOR: TEAM CORE DUMPERS
// START OF ALGO

	INPUT n
	i <- 0				// STARTING ASSIGNMENTS
	j <- 0
	position <- 0
	caldistance <- 0.0
	distance <- 0.0
	distance1 <- 1000000000
	x <- 0.0
	y <- 0.0;

	TAKE INPUT n
	DECLARING ARRAY LISTS cox,coy
	for(i= 0 to n)
		START FOR		
		TAKING INPUT cox AND coy
		x+=cox(i)		//	storing data in cox arraylist
		y+=coy(i)		//	storing data in coy arraylist	
		END FOR

	x <- x/n			//	getting coordinates by center of mass concept
	y <- y/n

	//comparing and selecting minimum sum of distance among coordinates given
	for(i=0 to n) 
		START FOR
			distance += sqrt(pow(x-cox(i), 2)+pow(y-coy(i),2 ))
			for(j=0 to n)
				START FOR
					//calculating distance from one point to other given points				
				caldistance += sqrt(pow(cox(i)-cox(j), 2) + pow(coy(i)-coy(j),2 ))
				END FOR

			if(caldistance LESS THAN distance1)
				START IF				
				distance1 <- caldistance;
				position <- i;
				END IF

			caldistance <- 0;
		END FOR
		//comparing result and printing coordinates
		if(distance LESS THAN distance1)
			START IF			
			OUT("coordinates are:'x' , 'y' distance : 'distance')	
		else
			OUT("coordinates are:'cox(position)' 'coy(position)' distance : 'distance1')
			END IF			

// END OF ALGO
